"""
A dict with WASM opcodes.
"""

# Todo: left out 32bit opcodes for now

OPCODES = {
    'unreachable':0x00,
    'nop':0x01,
    'block':0x02,
    'loop':0x03,
    'if':0x04,
    'else':0x05,
    'end':0x0b,
    'br':0x0c,
    'br_if':0x0d,
    'br_table':0x0e,
    'return':0x0f,
    
    'call':0x10,
    'call_indirect':0x11,
    
    'drop':0x1a,
    'select':0x1b,
    
    'get_local':0x20,
    'set_local':0x21,
    'tee_local':0x22,
    'get_global':0x23,
    'set_global':0x24,
    
    'i64.load':0x29,
    'f64.load':0x2b,
    'i64.load8_s':0x30,
    'i64.load8_u':0x31,
    'i64.load16_s':0x32,
    'i64.load16_u':0x33,
    'i64.load32_s':0x34,
    'i64.load32_u':0x35,
    'i64.store':0x37,
    'f64.store':0x39,
    'current_memory':0x3f,
    'grow_memory':0x40,
    
    'i32.const':0x41,
    'i64.const':0x42,
    'f32.const':0x43,
    'f64.const':0x44,
    
    'i64.eqz':0x50,
    'i64.eq':0x51,
    'i64.ne':0x52,
    'i64.lt_s':0x53,
    'i64.lt_u':0x54,
    'i64.gt_s':0x55,
    'i64.gt_u':0x56,
    'i64.le_s':0x57,
    'i64.le_u':0x58,
    'i64.ge_s':0x59,
    'i64.ge_u':0x5a,
    'f64.eq':0x61,
    'f64.ne':0x62,
    'f64.lt':0x63,
    'f64.gt':0x64,
    'f64.le':0x65,
    'f64.ge':0x66,
    
    'i64.clz':0x79,
    'i64.ctz':0x7a,
    'i64.popcnt':0x7b,
    'i64.add':0x7c,
    'i64.sub':0x7d,
    'i64.mul':0x7e,
    'i64.div_s':0x7f,
    'i64.div_u':0x80,
    'i64.rem_s':0x81,
    'i64.rem_u':0x82,
    'i64.and':0x83,
    'i64.or':0x84,
    'i64.xor':0x85,
    'i64.shl':0x86,
    'i64.shr_s':0x87,
    'i64.shr_u':0x88,
    'i64.rotl':0x89,
    'i64.rotr':0x8a,
    'f64.abs':0x99,
    'f64.neg':0x9a,
    'f64.ceil':0x9b,
    'f64.floor':0x9c,
    'f64.trunc':0x9d,
    'f64.nearest':0x9e,
    'f64.sqrt':0x9f,
    'f64.add':0xa0,
    'f64.sub':0xa1,
    'f64.mul':0xa2,
    'f64.div':0xa3,
    'f64.min':0xa4,
    'f64.max':0xa5,
    'f64.copysign':0xa6,
    
    'i64.trunc_s/f64':0xb0,
    'i64.trunc_u/f64':0xb1,
    'f64.convert_s/i64':0xb9,
    'f64.convert_u/i64':0xba,
    'i64.reinterpret/f64':0xbd,
    'f64.reinterpret/i64':0xbf,
    }
